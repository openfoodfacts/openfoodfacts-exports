import pandas as pd


PARQUET_PATH = "/home/jeremy/projects/openfoodfacts/data/food.parquet"

LANG_FIELDS = [
    "packaging",
    "categories",
    "origins",
    "labels",
    "countries",
    "allergens",
    "traces",
    "additives",
    "food_groups",
    "states",
    # "main_category",  #missing in Parquet, hard to define
    
    "url" # Composed with code: â”‚ http://fr.openfoodfacts.org/produit/9999999999994/ or http://world.openfoodfacts.org/product/9999999999994/
]

FIELDS = [
    "code",
    # "url",
    "creator",
    "created_t",
    # "created_datetime", # created_t into created_datetime
    "last_modified_t",
    # "last_modified_datetime", # same
    "last_modified_by",
    "last_updated_t",
    # "last_updated_datetime", # same
    "product_name",
    "abbreviated_product_name", # Haven't figured out the process. Just take the product_name, which is a struct with main and lang
    "generic_name",
    "quantity",
    "packaging",
    "packaging_tags",
    "packaging_text",
    "brands",
    "brands_tags",
    "categories",
    "categories_tags",
    "origins",
    "origins_tags",
    "manufacturing_places",
    "manufacturing_places_tags",
    "labels",
    "labels_tags",
    "emb_codes",
    "emb_codes_tags",
    # "first_packaging_code_geo", # Don't know where to find it
    # "cities", # Just empty, remove it
    "cities_tags",
    "purchase_places", # purchase_places_tags
    "stores",
    "countries", # = countries_tags
    "countries_tags",
    "ingredients_text",
    "ingredients_tags",
    "ingredients_analysis_tags",
    "allergens", # allergens_tags
    "traces", # trace_tags
    "traces_tags",
    "serving_size",
    "serving_quantity",
    "no_nutrition_data",
    "additives_n",
    "additives", #additives_tags
    "additives_tags",
    "nutriscore_score",
    "nutriscore_grade",
    "nova_group",
    "pnns_groups_1", # missing
    "pnns_groups_2", # missing
    "food_groups", #food_group_tags
    "food_groups_tags",
    "states",  # states_tags
    "states_tags",
    "brand_owner",
    "ecoscore_score",
    "ecoscore_grade",
    "nutrient_levels_tags",
    "product_quantity",
    "owner",
    "data_quality_errors_tags",
    "unique_scans_n",
    "popularity_tags",
    "completeness",
    "last_image_t",
    "last_image_datetime", # from last_image_t
    "main_category",
    "image_url",
    "image_small_url", # small correspond to image size
    "image_ingredients_url",
    "image_ingredients_small_url",
    "image_nutrition_url", # careful lang 'nutrition_lg'
    "image_nutrition_small_url",
    "energy_kj_100g",
    "energy_kcal_100g",
    "energy_100g",
    "fat_100g",
    "saturated_fat_100g", # in nutriments
    "butyric_acid_100g",
    "caproic_acid_100g",
    "caprylic_acid_100g",
    "capric_acid_100g",
    "lauric_acid_100g",
    "myristic_acid_100g",
    "palmitic_acid_100g",
    "stearic_acid_100g",
    "arachidic_acid_100g",
    "behenic_acid_100g",
    "lignoceric_acid_100g",
    "cerotic_acid_100g",
    "montanic_acid_100g",
    "melissic_acid_100g",
    "unsaturated_fat_100g",
    "monounsaturated_fat_100g",
    "polyunsaturated_fat_100g",
    "eicosapentaenoic_acid_100g",
    "docosahexaenoic_acid_100g",
    "linoleic_acid_100g",
    "arachidonic_acid_100g",
    "oleic_acid_100g",
    "elaidic_acid_100g",
    "gondoic_acid_100g",
    "mead_acid_100g",
    "erucic_acid_100g",
    "nervonic_acid_100g",
    "trans_fat_100g",
    "cholesterol_100g",
    "carbohydrates_100g",
    "sugars_100g",
    "added_sugars_100g",
    "sucrose_100g",
    "glucose_100g",
    "fructose_100g",
    "lactose_100g",
    "maltose_100g",
    "maltodextrins_100g",
    "starch_100g",
    "polyols_100g",
    "erythritol_100g",
    "fiber_100g",
    "soluble_fiber_100g",
    "insoluble_fiber_100g",
    "proteins_100g",
    "casein_100g",
    "serum_proteins_100g",
    "nucleotides_100g",
    "salt_100g",
    "added_salt_100g",
    "sodium_100g",
    "alcohol_100g",
    "vitamin_a_100g",
    "beta_carotene_100g",
    "vitamin_d_100g",
    "vitamin_e_100g",
    "vitamin_k_100g",
    "vitamin_c_100g",
    "vitamin_b1_100g",
    "vitamin_b2_100g",
    "vitamin_pp_100g",
    "vitamin_b6_100g",
    "vitamin_b9_100g",
    "folates_100g",
    "vitamin_b12_100g",
    "biotin_100g",
    "pantothenic_acid_100g",
    "silica_100g",
    "bicarbonate_100g",
    "potassium_100g",
    "chloride_100g",
    "calcium_100g",
    "phosphorus_100g",
    "iron_100g",
    "magnesium_100g",
    "zinc_100g",
    "copper_100g",
    "manganese_100g",
    "fluoride_100g",
    "selenium_100g",
    "chromium_100g",
    "molybdenum_100g",
    "iodine_100g",
    "caffeine_100g",
    "taurine_100g",
    "ph_100g",
    "cocoa_100g",
    "chlorophyl_100g",
    "carbon_footprint_100g",
    "glycemic_index_100g",
    "water_hardness_100g",
    "choline_100g",
    "phylloquinone_100g",
    "beta_glucan_100g",
    "inositol_100g",
    "carnitine_100g",
    "sulphate_100g",
    "nitrate_100g",
]



df = pd.read_parquet(PARQUET_PATH, columns=FIELDS)
