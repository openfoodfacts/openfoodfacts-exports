x-base-volumes:
  &base-volumes
  - home_cache:/home/off/.cache
  - tmp:/tmp
  - datasets:/app/datasets

x-service-base:
  &service-base
  restart: $RESTART_POLICY
  # this image is built with target=runtime, so it won't have the dev dependencies
  image: ghcr.io/openfoodfacts/openfoodfacts-exports:${TAG}
  volumes: *base-volumes

x-service-base-env:
  &service-base-env
  ENVIRONMENT:
  SENTRY_DSN:
  REDIS_HOST:
  ENABLE_HF_PUSH:
  ENABLE_S3_PUSH:
  HF_TOKEN: # Hugging Face token to push to the dataset hub
  AWS_ACCESS_KEY:
  AWS_SECRET_KEY:


services:
  scheduler:
    <<: *service-base
    environment: *service-base-env
    command: python -m openfoodfacts_exports run-scheduler
    mem_limit: 4g
    depends_on:
      - redis

  workers:
    <<: *service-base
    environment: *service-base-env
    command: rq worker --url redis://${REDIS_HOST:-redis}:6379 off-exports-high off-exports-low
    mem_limit: 4g
    depends_on:
      - redis
    deploy:
      replicas: ${NUM_RQ_WORKERS:-4}

  redis:
    restart: $RESTART_POLICY
    image: redis:7.0.5-alpine
    volumes:
      - redis-data:/data
    environment:
      REDIS_ARGS: --save 60 1000 --appendonly yes
    mem_limit: 4g
    ports:
      - "6379"

volumes:
  # Volume mount on /tmp to prevent large docker layer overlay
  tmp:
    name: ${COMPOSE_PROJECT_NAME:-off_exports}_tmp
  # Volume mount on ~/.cache to prevent large docker layer overlay
  home_cache:
    name: ${COMPOSE_PROJECT_NAME:-off_exports}_cache
  redis-data:
    name: ${COMPOSE_PROJECT_NAME:-off_exports}_redis-data
  datasets:
    name: ${COMPOSE_PROJECT_NAME:-off_exports}_datasets

networks:
  default:
